/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package my_company.memoria.jogador;

import javax.swing.BoxLayout;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;

/**
 *
 * @author pinhe
 */
public class EntrarJogo extends javax.swing.JPanel {
    private final MenuCliente menu;
    
    /**
     * Creates new form IntermediarioJogo
     * @param menu
     */
    public EntrarJogo(MenuCliente menu) {
        this.menu = menu;
        initComponents();
        PainelJogos.setLayout(new BoxLayout(PainelJogos, BoxLayout.Y_AXIS));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        criarJogo = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        PainelJogos = new javax.swing.JPanel();
        sliderPares = new javax.swing.JSlider();
        jLabel1 = new javax.swing.JLabel();
        numeroDisponivel = new javax.swing.JLabel();

        criarJogo.setText("Criar Jogo");
        criarJogo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                criarJogoActionPerformed(evt);
            }
        });

        jLabel2.setText("Criar Jogo com X pares:");

        javax.swing.GroupLayout PainelJogosLayout = new javax.swing.GroupLayout(PainelJogos);
        PainelJogos.setLayout(PainelJogosLayout);
        PainelJogosLayout.setHorizontalGroup(
            PainelJogosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        PainelJogosLayout.setVerticalGroup(
            PainelJogosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 228, Short.MAX_VALUE)
        );

        sliderPares.setMajorTickSpacing(1);
        sliderPares.setMaximum(30);
        sliderPares.setMinimum(1);
        sliderPares.setMinorTickSpacing(1);
        sliderPares.setPaintLabels(true);
        sliderPares.setPaintTicks(true);
        sliderPares.setSnapToTicks(true);
        sliderPares.setToolTipText("this.value");
        sliderPares.setValue(20);

        jLabel1.setText("Número de Jogos Disponíveis para Entrar:");

        numeroDisponivel.setText(" ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(203, 203, 203)
                        .addComponent(criarJogo))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(67, 67, 67)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(PainelJogos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(27, 27, 27)
                                .addComponent(numeroDisponivel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(sliderPares, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))))
                .addContainerGap(80, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sliderPares, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(criarJogo)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(numeroDisponivel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(PainelJogos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        PainelJogos.getAccessibleContext().setAccessibleName("");
    }// </editor-fold>//GEN-END:initComponents

    private void criarJogoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_criarJogoActionPerformed
        MemoriaJogador memoriaJogador = menu.getMemoriaJogador();
        memoriaJogador.enviarMensagem("Criar Jogo - " + sliderPares.getValue());
    }//GEN-LAST:event_criarJogoActionPerformed

    public void processarString(String texto){
        if (menu.getModo()){
            if (texto.startsWith("Jogo cheio")) jogoCheio();
            else atualizarJogos(texto);
        }
        else{
            jogosComecados(texto);
        }
    }
    
    public void entrandoMenu(){
        boolean aux = menu.getModo();
        jLabel2.setVisible(aux);
        sliderPares.setVisible(aux);
        criarJogo.setVisible(aux);
    }
    
    public void jogosComecados(String jogos){
        if (jogos.startsWith("Jogos Disponiveis")){
            jLabel1.setText("Número de Jogos Disponíveis para Ver:");
            PainelJogos.removeAll();
            String[] auxiliar = jogos.split("\\*\\*\\*");
            String[] linhas = auxiliar[1].split("\\^\\^\\^"); // Divide os jogos por linha
            numeroDisponivel.setText(Integer.toString(linhas.length));
            for (String linha : linhas) {
                if (linha.trim().isEmpty()) continue; // Evita linhas vazias
                String[] partes = linha.split(": ");
                String[] portaString = partes[1].split(" -> ");
                int porta = Integer.parseInt(portaString[0]);

                String textoBotao = "Veja " + linha;
                JButton botao = new JButton(textoBotao);
                botao.addActionListener(e -> verJogo(porta));

                PainelJogos.add(botao);
            }

            PainelJogos.revalidate();
            PainelJogos.repaint();
        }
        else if(jogos.startsWith("Não há jogos começados para ver")){
            numeroDisponivel.setText(Integer.toString(0));
            PainelJogos.removeAll();
            JLabel label = new JLabel("Não há jogos começar para ver");
            PainelJogos.add(label);
            PainelJogos.revalidate();
            PainelJogos.repaint();
        }
    }
    
    public void jogoCheio(){
        JOptionPane.showMessageDialog(null, "Jogo Cheio ou algum outro problema na conexão");
    }
    
    public void atualizarJogos(String jogos){
        PainelJogos.removeAll();
        if (jogos.equals("Não há jogos")) numeroDisponivel.setText("0");
        else{
            String[] linhas = jogos.split("\\^\\^\\^"); // Divide os jogos por linha
            numeroDisponivel.setText(Integer.toString(linhas.length));
            for (String linha : linhas) {
                if (linha.trim().isEmpty()) continue; // Evita linhas vazias

                String[] partes = linha.split(": "); // Separa "Jogo X" e "Y jogadores"
                if (partes.length < 2) continue;

                String[] jogoInfo = partes[0].split(" "); // Pega o número do jogo
                int jogoIndex = Integer.parseInt(jogoInfo[1]) - 1; // Pegamos o X de "Jogo X"

                String textoBotao = "Entre " + partes[0] + " - " + partes[1];
                JButton botao = new JButton(textoBotao);
                botao.addActionListener(e -> entrarNoJogo(jogoIndex));

                PainelJogos.add(botao);
            }

            PainelJogos.revalidate();
            PainelJogos.repaint();
        }
    }
    
    private void entrarNoJogo(int jogoIndex) {
        MemoriaJogador memoriaJogador = menu.getMemoriaJogador();
        memoriaJogador.enviarMensagem("Entrando no jogo " + jogoIndex);
    }

    private void verJogo(int porta){menu.setPortaTelespectador(porta);}
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel PainelJogos;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton criarJogo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel numeroDisponivel;
    private javax.swing.JSlider sliderPares;
    // End of variables declaration//GEN-END:variables
}
